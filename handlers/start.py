import logging

from aiogram import types, F
from aiogram.filters import Command, CommandObject


import keyboards
from data.config import ADMINS
from database import SessionLocal
from keyboards.inline.inline_keyboard_markup import main_keyboard
from loader import dp, bot
from utils.db.queries import get_user, create_user
import asyncio

@dp.message(Command("start"))
# @dp.message(CommandStart(deep_link=True))
async def cmd_start(message: types.Message,
                    command: CommandObject):
    try:
        async with SessionLocal.begin() as session:
            user = await get_user(session,
                                  message.from_user.id)
            if user is None:
                is_client = False
                await create_user(session,
                                  message.from_user.id,
                                  message.from_user.username,
                                  message.from_user.full_name)
            # session.commit()  # –ë–û–õ–¨–®–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–ï–ú. –ê–í–¢–û–ö–û–ú–ú–ò–¢ –†–ê–ë–û–¢–ê–ï–¢
            else:
                is_client = user.is_yoga_access
    except Exception as ex:
        logging.error(ex)
        try:
            await bot.send_message(message.from_user.id, '''–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–∞—á–∞–ª–∞ -> /start''')
        except Exception as ex:
            logging.error(ex)
        return
    # if command.args:
    #     if command.args == '777':
    #         try:
    #             await bot.send_message(message.from_user.id, 'XD')
    #         except Exception as ex:
    #             logging.error(ex)
    #         return
    if is_client:
        try:
            await bot.send_message(message.from_user.id, f"""–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>!
–¢–≤–æ—ë –º–µ–Ω—é –Ω–∏–∂–µ""", reply_markup=keyboards.default.personal_account.menu)
        except Exception as ex:
            logging.error(ex)
        return
    try:
        await bot.send_message(message.from_user.id, f'''–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>! –ú–µ–Ω—è –∑–æ–≤—É—Ç –¢–∞—Ç—å—è–Ω–∞. –Ø –ø—Ä–µ–ø–æ–¥–∞—é –π–æ–≥—É –ê–π–µ–Ω–≥–∞—Ä–∞ –≤ –∑–∞–∫—Ä—ã—Ç–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–µ tanyoga. –¢–∞–º –µ—Å—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –∑–∞–ø–∏—Å–∏ –∏ –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π.''')
    except Exception as ex:
        logging.error(ex)
        pass
    try:
        await asyncio.sleep(8)
    except Exception as ex:
        logging.error(ex)
        pass
    try:
        await bot.send_message(message.from_user.id, """–ô–æ–≥–∞ –ê–π–µ–Ω–≥–∞—Ä–∞ - –±–µ—Ä–µ–∂–Ω–∞—è –π–æ–≥–∞. –û–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –≤—Å–µ–º - –¥–∞–∂–µ –Ω–µ –≥–∏–±–∫–∏–º –∏ –ª—é–¥—è–º —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–æ –∑–¥–æ—Ä–æ–≤—å—é. –í –ø—Ä–∞–∫—Ç–∏–∫–µ –º—ã –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–ª–æ–∫–∏ –∏ —Ä–µ–º–Ω–∏. –¢–∞–∫ —á—Ç–æ –ª—é–±–∞—è –∞—Å–∞–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ–ª–æ–≤–µ–∫—É –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ —Ä–∞—Å—Ç—è–∂–∫–∏.

–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –ø–æ–∑–≤–æ–ª—è—Ç —É–ª—É—á—à–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ, —É–∫—Ä–µ–ø–∏—Ç—å —Ç–µ–ª–æ, —Ä–∞–∑–≤–∏—Ç—å –≥–∏–±–∫–∏—Å—Ç—å, —Å–Ω—è—Ç—å —Å—Ç—Ä–µ—Å—Å, —É—Å–ø–æ–∫–æ–∏—Ç—å —ç–º–æ—Ü–∏–∏ –∏ —É–º, –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ, –æ—â—É—Ç–∏—Ç—å —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω–æ–µ —Ç–µ–ª–æ –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏.

–ü—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ –∏–¥—É—Ç –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∫ —Å–ª–æ–∂–Ω–æ–º—É. –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ. –°–Ω–∞—á–∞–ª–∞ –º—ã –∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å–æ –≤—Å–µ–º–∏ –∞—Å–∞–Ω–∞–º–∏. –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —è —Ä–∞–∑–¥–µ–ª–∏–ª–∞ –∏—Ö –Ω–∞ 9 –≥—Ä—É–ø–ø:

üßçüèº‚Äç‚ôÄÔ∏è–ü–æ–∑—ã —Å—Ç–æ—è
üßò‚Äç‚ôÄÔ∏è–ü–æ–∑—ã —Å–∏–¥—è
üíÜüèº‚Äç‚ôÄÔ∏è–ü–æ–∑—ã –ª–µ–∂–∞
üßé‚Äç‚ôÄÔ∏è–°–∫—Ä—É—Ç–∫–∏
ü§æ–ü—Ä–æ–≥–∏–±—ã
üö∂üèº‚Äç‚ôÇÔ∏è–ë–∞–ª–∞–Ω—Å –∏ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–∞–∑–∞
üôáüèº‚Äç‚ôÄÔ∏è–ù–∞–∫–ª–æ–Ω—ã –≤–ø–µ—Ä–µ–¥
ü§∏‚Äç‚ôÇÔ∏è–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–µ –∞—Å–∞–Ω—ã
üèÉ‚Äç‚ôÇÔ∏è–î–∏–Ω–∞–º–∏–∫–∞""", reply_markup=main_keyboard)
    except Exception as ex:
        logging.error(ex)
        pass


@dp.message(F.content_type.in_({'photo', 'video', 'document', 'video_note'}))
async def echo_files(message: types.Message):
    if str(message.from_user.id) in ADMINS:
        if message.photo:
            try:
                await bot.send_message(message.from_user.id, message.photo[0].file_id)
            except:
                pass
        if message.video:
            try:
                await bot.send_message(message.from_user.id, message.video.file_id)
            except:
                pass
        if message.document:
            try:
                await bot.send_message(message.from_user.id, message.document.file_id)
            except:
                pass
        if message.video_note:
            try:
                await bot.send_message(message.from_user.id, message.video_note.file_id)
            except:
                pass
        return

